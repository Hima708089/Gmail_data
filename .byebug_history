continue
c
obj
        EmployeeStatus.create(obj)
obj
emails.each do |email| obj = EmailSanitizerService.new(email).execute! end
emails.each do |email| end
obj
emails
continue
c
Mail.find(:what => :first, :count => 10, :order => :asc)
obj
c
Mail.find(:what => :first, :count => 10, :order => :asc)
c
c'
email
c
emails
c
emails
continue
c
EmailSanitizerService.new(email).execute!
obj
continue
c
obj
continue
c
EmployeeStatus.create!(obj)
obj = EmailSanitizerService.new(email).execute!
EmployeeStatus.create(obj)
EmailStatus.create(obj)
obj = EmailSanitizerService.new(email).execute!
obj = EmailSanitizerService.new(emails).execute!
EmailSanitizerService.new(email).execute!
EmailSanitizerService.new(emails).execute!
emails.each do |email|end
emails
c
EmailSanitizerService.new(emails).execute!
emails.each do |email|end
EmailSanitizerService.new(emails).execute!
EmailSanitizerService.new(email).execute!
emails
email
c
EmailSanitizerService.new(email).execute!
emails.each do |email|end
emails
EmailSanitizerService.new(email).execute!
emails.each do |email|  EmailSanitizerService.new(email).execute!end
emails.each do |email| end
obj
EmailSanitizerService.new(emails).execute!
EmailSanitizerService.new(email).execute!
emails.each do |email| end
emails.each do |email|  EmailSanitizerService.new(email).execute!end
EmailSanitizerService.new(email).execute!
emails.__id__
emails
c
emails
c
emails.__id__
emails.methods
emails.keys
emails.id
emails
emails.body
emails.ids
emails.id
emails.methods
emails
c
C
EmployeeDatum.create(obj)
EmployeeDatum.create(ojb)
obj.keys
EmailSanitizerService.new(email).execute!
obj
obj[:in_time]
obj[:in_time}
obj = EmailSanitizerService.new(email).execute!
:in_time
in_time
EmailSanitizerService.new(email).execute!
      email_data: email_data)
      email_subject: email_subject,
      sent_by: sent_by,
      email_date: email_date,
      productive_hour: productive_hour,
      project_name: project_name,
      week_goals:week_goals,
      task2: task2,
      task1: task1,
      out_time: out_time,
   EmployeeDatum.create(in_time: in_time,
EmailSanitizerService.new(email).execute!
c
emails
c
obj
c
EmailSanitizerService.new(email).execute!.class
EmailSanitizerService.new(email).execute!
emails.each do |email|end
emails.each do |email|  EmailSanitizerService.new(email).execute!end.class
emails.each do |email|  EmailSanitizerService.new(email).execute!end
obj = emails.each do |email|  EmailSanitizerService.new(email).execute!end
obj.class
obj = emails.each do |email|  EmailSanitizerService.new(email).execute!end
emails
obj
c
emails
c
emails
c
emails
c
in_time
intime
emails
obj
obj = emails.each do |email|  EmailSanitizerService.new(email).execute!end
obj.save
obj = emails.each do |email|  EmailSanitizerService.new(email).execute!end
email
emails.each do |email|  EmailSanitizerService.new(email).execute!end
emails.each do |email|  EmailSanitizerService.new(email).execute!
emails.each do |email|
emails
email
EmailSanitizerService.new(email).execute!
end
  EmailSanitizerService.new(email).execute!
emails.each do |email|
EmailSanitizerService.new
EmailSanitizerService.new(emails).execute!
EmailSanitizerService.new(email).execute!
emails
c
emails
c
emails_body.count
email_body.count
email.count
email_body[/#{str3_markerstring}(.*?)]
email_body[/#{str3_markerstring}(.*?)}]
email_body[/#{str3_markerstring}(.*?)}
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
      #email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body.split("Goals for the week:")[1].split("Project")[0].gsub("\n","","*","")
email_body.split!("Goals for the week:")[1].split!("Project")[0].gsub("\n","","*","")
email_body.split!("Goals for the week:")
email_body.split("Goals for the week:")
email_body.split("Goals for the week:")[1].split("Project")[0].gsub("\n","","*","")
str3_markerstring ="Goals for the week:"
      @email_body ||= full_sanitizer.sanitize(email.body.to_s)
      full_sanitizer = Rails::Html::FullSanitizer.new
email_body = email.body
email_body = email.first
email
c
emails.split("Goals for the week:")[1].split("Project")[0].gsub("\n","","*","")
str4_markerstring ="Project:"
str3_markerstring ="Goals for the week:"
emails.split("Goals for the week:")[1].split("Project")[0].gsub("\n","","*","")
emails = email.body
email.body
email.first.body
emails = email.first.body
email
c
email
emai;l
emails
c
continue
c
email_body.split("Goals for the week:")[1].split("Project")[0].gsub("\n","","*","")
email_body.split("Goals for the week:")[1].split("Project")[0].gsub("\n","")
email_body.split("Goals for the week:")[1].split("Project")[0]
email_body.split("Goals for the week:")[1]
email_body.split("Goals for the week:")
email_body.split("Goals for the week:
email_body
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/n, 1].gsub("\n", "").split("- ")
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
str4_markerstring ="Project:"
str3_markerstring ="Goals for the week:"
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body
email
emails
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1]
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].split("- ")
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body[/"Today, we completed the following tasks:"(.*?)"Tomorrow, we plan on completing the following tasks:"/m, 1]
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
str4_markerstring ="Project:"
str3_markerstring ="Goals for the week:"
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1]
email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
str4_markerstring ="Project:"
email_body[/#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body[*/#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body[/*#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body[/#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1].gsub("\n", "").split("- ")
str3_markerstring ="Goals for the week:"
str3_markerstring = Goals for the week:
str1_markerstring
email_body[/#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body[/#{str2_markerstring}
email_body[/#{str2_markerstring}/m, 1]
email_body[/#{str2_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body[/#{str1_markerstring}(.*?)#{str2_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body[/#{str1_markerstring}(.*?)#{str2_markerstring}/m, 1].gsub("\n", "").split("-")
email_body[/#{str1_markerstring}(.*?)#{str2_markerstring}/m, 1].gsub("\n", "")
email_body[/#{str1_markerstring}(.*?)#{str2_markerstring}/m, 1].gsub("\n").
email_body[/#{str1_markerstring}(.*?)#{str2_markerstring}/m, 1].strip("\n")
email_body[/#{str1_markerstring}(.*?)#{str2_markerstring}/m, 1].strip
email_body[/#{str1_markerstring}(.*?)#{str2_markerstring}/m, 1]
str2_markerstring = "Tomorrow, we plan on completing the following tasks:"
email_body[/"Today, we completed the following tasks:"(.*?)"Tomorrow, we plan on completing the following tasks:"/m, 1]
email_body[/"Today, we completed the following tasks:"(.*?)Tomorrow, we plan on completing the following tasks:/m, 1]
input_string[/#{str1_markerstring}(.*?)#{str2_markerstring}/m, 1]
email_body.split("Today, we completed the following tasks:")[1].split("Tomorrow, we plan on completing the following tasks:")
email_body.split("Today, we completed the following tasks:")[1]
email_body.split("Today, we completed the following tasks:")[1].split("\n")
 email_body
email_body.split('Today, we completed the following tasks:')[1].split("\n")
email_body.split('Today, we completed the following tasks:')[1].split("\n").first
email_body.split('Today, we completed the following tasks:')[1].split("\n")
email_body.split('tasks:')[1].split("\n")
email_body.split('tasks:')[1].split('\n')
email_body.split('tasks:')[1]
email_body.split('tasks:')
email_body.split('PM')
"#{email_body.split('Out Time: ')[1].split('M')[0].strip}M"
"#{email_body.split('In Time: ')[1].split('M')[0].strip}M"
email_body.split('Out Time: ')[1].split('M')[0]
email_body.split('Out Time: ')[1].split('M')
email_body.split('Out Time: ')
c
out_time.gsub("\n", '')
out_time.gsub(' \n', '')
out_time.gsub('\n', '')
out_time.strip
out_time
in_time
