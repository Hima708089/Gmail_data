c
EmployeeStatus.create
EmployeeStatus.create(obj)
obj = EmailSanitizerService.new(email).execute!
in_time
intime
c
EmployeeStatus.create
EmployeeStatus.create(obj)
obj = EmailSanitizerService.new(email).execute!
EmailSanitizerService.new(email).execute!
EmailSanitizerService.new(email)
obj
email_date
sent_by
productive_hour
week_goals
task2
task1
out_time
in_time
c
@email
emails
email
c
EmailSanitizerService.new(email).execute!
obj
c
week_goals
email
c
email.subject
email
emails
@email.count
@email
emails
email
c
productive_hour
sent_by
week_goals
task2
task1
out_time
in_time
email
c
email.subject
email
emails
c
EmailSanitizerService.class
Class.class
EmailSanitizerService.class
EmailSanitizerService.new(email).class
EmailSanitizerService.new(email)
EmailSanitizerService.new
execute!.class
EmployeeStatus.create
obj
   EmployeeStatus.create(obj)
EmailSanitizerService.new(email).execute!
obj
email
c
email_body[/#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1].gsub("\n", "").split("- ")
email_body.split(str2_markerstring)[1].split(str2_markerstring)[0].split
email_body.split(str2_markerstring)[1].split(str2_markerstring)[0]
      str3_markerstring = "Reason:"
      str2_markerstring = "Goals for the week:"
email_body[/#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1]
email_body[/#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1].gsub("\n", "").split("- ")
      email_body[/#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1].gsub("\n", "").split("- ")
      str3_markerstring = "Reason :"
      str2_markerstring = "Goals for the week:"
week_goals
task2
project1 = email_body.split("PROJECT 1:")[1].split("PROJECT 2:")[0].gsub("\n"," ")
email_body.split("PROJECT 1:")[1].split("PROJECT 2:")[0].gsub("\n"," ")
task1
sent_by
productive_hour
out_time
in_time
project1
c
task1
email_date
sent_by
productive_hour
week_goals
task2
task1
out_time
in_time
c
in_time
EmailSanitizerService.new(email).execute!
EmailSanitizerService.new(email).execute
EmailSanitizerService.new(email)
EmailSanitizerService.new(email).execute!            
=> 13:     obj = EmailSanitizerService.new(email).execute!            
obj
email
emails.empty?
c
email
emails
c
      email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
str4_markerstring = "Reason:"
      str3_markerstring = "Goals for the week:"
email_body.split('Goals for the week:')[1].split('Reason')[0].split
"#{email_body.split('Goals for the week:')[1].split('Today')[0].strip}"
email_body.split('Goals for the week:')[1].split('Reason')[0].split
email_body.split('Goals for the week:')[1].split('Reason')[0]
"#{email_body.split('Goals for the week:')[1].split('Today')[0].strip.gsub("*"," ").strip}"
email_body
week_goals
week_goal
week_goals
task2
task1
 email_data.split('Return-Path')[1].split('Received')[0].strip
      email_data.split('Return-Path')[1].split('Received')[0].strip
email_subject.split('Status')[1].strip
email_subject.split('Status ')[1].strip
email_subject
email_status
      email_status.split('Status ')[1].strip
"#{email_body.split('PM')[1].split('Today')[0].strip.gsub("*"," ").strip}"
email_body.split('PM')[1].split('Today')[0].strip
email_body.split('PM')[1].split('Today')[0]
"#{email_body.split('PM')[1].split('Today')[0].strip.gsub("*"," ")}"
 email_body.split('Productive Hour:')[1]
      email_body.split('Productive Hour:')[1].strip
"#{email_body.split('day')[1].split('*Out*')[0].strip.gsub("*"," ")}"
"#{email_body.split('day')[1].split('*Out*')[0].strip}"
"#{email_body.split('AM')[1].split('*Productive')[0].strip}"
"#{email_body.split('AM')[1].split('*Productive')[0].gsub("\n"," ")}"
"#{email_body.split('AM')[1].split('*Productive').gsub("\n"," ")}"
"#{email_body.split('day')[1].split('*Out*')[0].gsub("\n"," ")}"
#{email_body.split('day')[1].split('*Out*')[0].gsub("\n"," ")}
email_body.split('day')[1].split('*Out*')[0].gsub("\n"," ")
email_body.split('day')[1].split('*Out*')[0]
email_body.split('day')[1].split('*Out*)[0]
email_body
email_body.split('In*')[1]
email_body.strip
email_body[129,132]
email_body[129,130,131]
email_body[129]
email_body[129,130]
email_body[130,135]
email_body[125,130]
email_body[125,]
email_body[115,125]
email_body[110,115]
email_body[100,105]
email_body
email
c
email.subject
email
c
email
emails.count
c
email_body.split('In Time:')[1]
email_body.split('*In**Time*:)[1].split('AM')[0]
"#{email_body.split('In Time: ')[1].split('M')[0].strip}M"
      "#{email_body.split('In Time: ')[1].split('M')[0].strip}M"
email_body
productive_hour
week_goals
task2
task1
out_time
in_time
email.subject
email
emails
c
email_date
_date
email+Work Status (06/12/2022 )
productive_hour
week_goals
task2
task1
out_time
in_time
email
emails
c
email
c
end
    end
      @email_data = email.to_s
    def email_data
    end
      @email_subject = email.subject
    def email_subject
    end
      @email_body ||= full_sanitizer.sanitize(email.body.to_s)
      full_sanitizer = Rails::Html::FullSanitizer.new
      #byebug
    def email_body
    end
      email_data.split('Return-Path')[1].split('Received')[0].strip
    def sent_by
    end
      split('Status ')[1].strip
    def email_date
    end
      email_body.split('Productive Hour:')[1].strip
    def productive_hour
    #end
     # email_body.split('Project')[1].split('Reason')[0].strip
    #def project_name
    end
      #email_body.split("Goals for the week:")[1].split("Project")[0].gsub("\n","")
      email_body[/#{str3_markerstring}(.*?)#{str4_markerstring}/m, 1].gsub("\n", "").split("- ")
      str4_markerstring = "Project :"
      str3_markerstring = "Goals for the week:"
    def week_goals
    end
      #email_body.split('PM')[1].split('Project Name:')[0].strip 
      email_body[/#{str2_markerstring}(.*?)#{str3_markerstring}/m, 1].gsub("\n", "").split("- ")
      str3_markerstring = "Goals for the week:"
      str2_markerstring = "Tomorrow, we plan on completing the following tasks:"
    def task2
    end
      #email_body.split('PM')[1].split('Project Name:')[0].strip 
      #email_body[/#{str1_markerstring}(.*?)#{str2_markerstring}/m, 1].gsub("\n", "").split("- ")
      #str2_markerstring = "Tomorrow, we plan on completing the following tasks:"
      #str1_markerstring = "Today, we completed the following tasks:"
      end
        puts p 
      PROJECT.each do |p| 
      PROJECT.push(project1,project2)
      project2 = email_body.split("PROJECT 2:")[1].split("Tomorrow, we plan on completing the following tasks:")[0].gsub("\n"," ")
      project1 = email_body.split("PROJECT 1:")[1].split("PROJECT 2:")[0].gsub("\n"," ")
      #byebug
    def task1
    end
      "#{email_body.split('Out Time: ')[1].split('M')[0].strip}M"
    def out_time
    end
      "#{email_body.split('In Time: ')[1].split('M')[0].strip}M"
    def in_time
  private
  end
